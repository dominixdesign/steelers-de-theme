<?php $this->block('content'); ?>
<div class="<?= $this->cssClass ?>" <?= ($this->cssId) ? 'id="' . $this->cssId . '"' : '' ?>>
	<<?= $this->headlineUnit ?>><?= $this->headline ?></<?= $this->headlineUnit ?>>
	<script type="module">
		import {
			createApp,
			ref
		} from 'vue'
		import TodoItem from './TodoItem.js'

		createApp({
			components: {
				TodoItem
			},
			setup() {
				const groceryList = ref([{
						id: 0,
						text: 'Vegetables'
					},
					{
						id: 1,
						text: 'Cheese'
					},
					{
						id: 2,
						text: 'Whatever else humans are supposed to eat'
					}
				])

				return {
					groceryList
				}
			}
		}).mount('#app')
	</script>

	<div id="app">
		<ol>
			<!--
      We are providing each todo-item with the todo object
      it's representing, so that its content can be dynamic.
      We also need to provide each component with a "key",
      which is explained in the guide section on v-for.
    -->
			<todo-item v-for="item in groceryList" :todo="item" :key="item.id"></todo-item>
		</ol>
	</div>
</div>
<?php $this->endblock(); ?>
